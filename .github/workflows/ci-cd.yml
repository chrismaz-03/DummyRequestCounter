name: CI / CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  IMAGE_NAME: ${{ github.repository }}

jobs:
  lint:
    name: Lint & Static Analysis
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Install dev dependencies
        run: python -m pip install --upgrade pip && pip install -r requirements.txt
      - name: Run flake8
        run: |
          if command -v flake8 >/dev/null 2>&1; then flake8 || exit 1; fi
      - name: Code analysis
        run: |
          pip install pylint bandit
          pylint **/*.py
          bandit -r .

  test:
    name: Tests (unit)
    runs-on: ubuntu-latest
    needs: lint
    services:
      redis:
        image: redis:7
        ports:
          - 6379:6379
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Install dependencies
        run: python -m pip install --upgrade pip && pip install -r requirements.txt
      - name: Wait for redis
        run: |
          for i in {1..10}; do nc -z localhost 6379 && break || sleep 1; done
      - name: Run pytest
        run: pytest -q

  build-and-push:
    name: Build, Test, and Push Docker image
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v4
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/my-app:latest .
      - name: Test Docker container
        run: |
          docker run --rm ${{ secrets.DOCKER_USERNAME }}/my-app:latest python --version
      - name: Push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/dummyrequestcounter:latest
          file: ./Dockerfile
